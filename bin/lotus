#!/usr/bin/env ruby

require 'bundler'
Bundler.require
require 'active_support'
require 'active_support/core_ext'
require 'active_record'
require 'yaml'

root = File.expand_path(__dir__ + '/..')
%w{lotus lotus/job lotus/ts lotus/epg_parser lotus/repair lotus/encode}.each do |filename|
  require root+'/lib/'+filename
end

%w{video job job_log filter_regexp}.each do |filename|
  require root+'/models/'+filename
end

%w{sleep create_db update_schema process load_ts clear_queue}.each do |filename|
  require root+'/jobs/'+filename
end

class LotusCLI < Thor
  class_option :env

  desc 'sleep', 'test job'
  def sleep
    SleepJob.new(env).execute!
  end

  desc 'process', 'process'
  option :job_id, required: false, type: :numeric
  def process(job_id=nil)
    ProcessJob.new(env, job_id).execute!
  end

  desc 'process_all', 'process all'
  def process_all
  end

  desc 'create_db', 'create_db'
  def create_db
    CreateDB.new(env).execute!
  end

  desc 'update_schema', 'update schema'
  def update_schema
    UpdateSchema.new(env).execute!
  end

  desc 'load_ts', 'load ts'
  def load_ts
    LoadTSJob.new(env).execute!
  end

  desc 'clear_queue', 'clear queue'
  def clear_queue
    ClearQueueJob.new(env).execute!
  end

  private
  def env
    options['env'].blank? ? :development : options[:env].to_sym
  end
end

LotusCLI.start(ARGV)
